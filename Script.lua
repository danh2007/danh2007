-- Bi·∫øn l∆∞u menu tr∆∞·ªõc ƒë√≥
local menuStack = {}

function OpenMenu(menuFunc)
    table.insert(menuStack, menuFunc)
    menuFunc()
end

function BackMenu()
    if #menuStack > 1 then
        table.remove(menuStack) -- X√≥a menu hi·ªán t·∫°i
        menuStack[#menuStack]() -- Quay l·∫°i menu tr∆∞·ªõc ƒë√≥
    else
        Main() -- N·∫øu kh√¥ng c√≤n menu n√†o th√¨ v·ªÅ menu ch√≠nh
    end
end

gg.alert("MU·ªêN HACK MINIGAME M·ªöI TH√å PH·∫¢I T·∫ÆT CH·ª®C NƒÇNG ·ªû MINIGAME C≈® ·ªû D√íNG '‚ùåT·∫ÆT T√çNH NƒÇNG‚ùå' C√ì ·ªû M·ªñI MENU")

function Main()
    local MainMenu = gg.multiChoice({
        "üìá MENU R√öT ƒê≈®A ü•¢",
        "üìá MENU R√öT THƒÇM üé∞",
        "‚ùå THO√ÅT"
    }, nil, 'üî• MENU BY TH√ÄNH DANH')

    if MainMenu == nil then return end

    if MainMenu[1] then OpenMenu(MenuCon1) end
    if MainMenu[2] then OpenMenu(MenuCon2) end
    if MainMenu[3] then ExitScript() end
end

-- MENU CON 1
function MenuCon1()
    local SubMenu1 = gg.multiChoice({
        "‚öôÔ∏è SETUP",
        "üìÇ MENU R√öT ƒê≈®A ü•¢",
        "‚ùå T·∫ÆT T√çNH NƒÇNG",
        "‚¨ÖÔ∏è QUAY L·∫†I"
    }, nil, 'üìÇ MENU BY TH√ÄNH DANH')

    if SubMenu1 == nil then return end

    if SubMenu1[1] then ChucNang1A() end -- CH·ª®C NƒÇNG 1A
    if SubMenu1[2] then OpenMenu(MenuCon1B) end -- MENU CON 1B
    if SubMenu1[3] then xoacn() end
    if SubMenu1[4] then BackMenu() end
end

-- MENU CON 1B (Menu Con trong Menu Con 1)
function MenuCon1B()
    local SubMenu1B = gg.multiChoice({
        "üéØ TR√öNG 21",
        "üéØ TR√öNG 18",
        "üéØ TR√öNG 15",
        "üéØ TR√öNG 12",
        "üéØ TR√öNG 11",
        "üéØ TR√öNG 9",
        "‚¨ÖÔ∏è QUAY L·∫†I"
    }, nil, 'üìÇ MENU BY TH√ÄNH DANH')

    if SubMenu1B == nil then return end

    if SubMenu1B[1] then ChucNang1B1() end
    if SubMenu1B[2] then ChucNang1B2() end
    if SubMenu1B[3] then ChucNang1B3() end
    if SubMenu1B[4] then ChucNang1B4() end
    if SubMenu1B[5] then ChucNang1B5() end
    if SubMenu1B[6] then ChucNang1B6() end
    if SubMenu1B[7] then BackMenu() end
end

-- MENU CON 2
function MenuCon2()
    local SubMenu2 = gg.multiChoice({
        "‚öôÔ∏è SETUP",
        "üìÇ MENU R√öT THƒÇM üé∞",
        "‚ùå T·∫ÆT CH·ª®C NƒÇNG",
        "‚¨ÖÔ∏è QUAY L·∫†I"
    }, nil, 'üìÇ MENU CON 2')

    if SubMenu2 == nil then return end

    if SubMenu2[1] then ChucNang2A() end -- CH·ª®C NƒÇNG 2A
    if SubMenu2[2] then OpenMenu(MenuCon2B) end -- MENU CON 2B
    if SubMenu2[3] then xoacn() end
    if SubMenu2[4] then BackMenu() end
end

-- MENU CON 2B (Menu Con trong Menu Con 2)
function MenuCon2B()
    local SubMenu2B = gg.multiChoice({
        "üé∞ 25",  
        "üé∞ 30",  
        "üé∞ 35",  
        "üé∞ 40",  
        "üé∞ 45",  
        "üé∞ 50",  
        "üé∞ 55",  
        "üé∞ 60",  
        "üé∞ 65",  
        "üé∞ 70",  
        "üé∞ 75",  
        "üé∞ 80",
        "‚¨ÖÔ∏è QUAY L·∫†I"
    }, nil, 'üìÇ MENU BY TH√ÄNH DANH')

    if SubMenu2B == nil then return end
    if SubMenu2B[1] then ChucNang2B1() end  
    if SubMenu2B[2] then ChucNang2B2() end  
    if SubMenu2B[3] then ChucNang2B3() end  
    if SubMenu2B[4] then ChucNang2B4() end  
    if SubMenu2B[5] then ChucNang2B5() end  
    if SubMenu2B[6] then ChucNang2B6() end  
    if SubMenu2B[7] then ChucNang2B7() end  
    if SubMenu2B[8] then ChucNang2B8() end  
    if SubMenu2B[9] then ChucNang2B9() end  
    if SubMenu2B[10] then ChucNang2B10() end  
    if SubMenu2B[11] then ChucNang2B11() end  
    if SubMenu2B[12] then ChucNang2B12() end
    if SubMenu2B[13] then BackMenu() end
end

-- C√ÅC CH·ª®C NƒÇNG TRONG MENU
function ChucNang1A()
    -- B∆∞·ªõc 1: Nh·∫≠p b·ªô 3 s·ªë l·∫ßn 1
    local a = gg.prompt({"ƒê≈®A 1:", "ƒê≈®A 2:", "ƒê≈®A 3:"}, nil, {"number", "number", "number"})

    if not a then
        gg.toast("üö´ H·ª¶Y")
        return
    end

    -- T√¨m ki·∫øm b·ªô 3 s·ªë l·∫ßn 1 (b·ªô nh·ªõ Anonymous)
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.searchNumber(a[1]..";"..a[2]..";"..a[3].."::12", gg.TYPE_DWORD)
    gg.toast("üîç XONG")

    -- ·∫®n menu ch·ªù ng∆∞·ªùi d√πng m·ªü l·∫°i GG l·∫ßn 2
    gg.setVisible(false)
    gg.toast("CHU·∫®N B·ªä SETUP L·∫¶N ‚úåÔ∏è")

    -- Ch·ªù ng∆∞·ªùi d√πng m·ªü l·∫°i GG
    while true do
        if gg.isVisible(true) then
            gg.setVisible(false)
            break
        end
    end

    -- B∆∞·ªõc 2: Nh·∫≠p b·ªô 3 s·ªë l·∫ßn 2
    gg.alert("SETUP L·∫¶N ‚úåÔ∏è")

    local b = gg.prompt({"ƒê≈®A 1:", "ƒê≈®A 2:", "ƒê≈®A 3:"}, nil, {"number", "number", "number"})

    if not b or not b[1] or not b[2] or not b[3] then
        gg.toast("üö´ H·ª¶Y!")
        return
    end

    -- L·ªçc d·ªØ li·ªáu t·ª´ k·∫øt qu·∫£ t√¨m ki·∫øm tr∆∞·ªõc
    gg.refineNumber(b[1]..";"..b[2]..";"..b[3].."..12")
    gg.toast("‚úÖ ƒê√É L·ªåC D·ªÆ LI·ªÜU!")

    -- L∆∞u l·∫°i danh s√°ch gi√° tr·ªã
    local results = gg.getResults(100)
    gg.addListItems(results)
    gg.toast("üíæ ƒê√É L∆ØU D·ªÆ LI·ªÜU")
end

function EditHackDua(value1, value2, value3)
    local results = gg.getListItems()
    if #results > 0 then
        for i = 1, #results do
            local index = (i - 1) % 3
            if index == 0 then results[i].value = value1 end
            if index == 1 then results[i].value = value2 end
            if index == 2 then results[i].value = value3 end
        end
        gg.setValues(results)
    end
end

function ChucNang1B1() 
    EditHackDua(7, 7, 7) 
end

function ChucNang1B2() 
    EditHackDua(6, 6, 6) 
end

function ChucNang1B3() 
    EditHackDua(5, 5, 5) 
end

function ChucNang1B4() 
    EditHackDua(4, 4, 4) 
end

function ChucNang1B5() 
    EditHackDua(4, 4, 3) 
end

function ChucNang1B6() 
    EditHackDua(3, 3, 3) 
end


function ChucNang2A()
gg.alert("SETUP L·∫¶N ‚òùÔ∏è")
 local a = gg.prompt({"NH·∫¨P GI√Å TR·ªä PHI·∫æU 1:"}, nil, {"number"})

if not a then 
    gg.toast("üö´ H·ª¶Y") 
    os.exit() 
end

-- T√¨m ki·∫øm gi√° tr·ªã ƒë·∫ßu ti√™n (b·ªô nh·ªõ Anonymous)
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber(a[1], gg.TYPE_DWORD)
gg.toast("üîç XONG")

-- ·∫®n menu ch·ªù ng∆∞·ªùi d√πng m·ªü l·∫°i GG
gg.setVisible(false)
gg.toast("CHU·∫®N B·ªä SETUP L·∫¶N ‚úåÔ∏è")

-- Ch·ªù ng∆∞·ªùi d√πng m·ªü l·∫°i GG
while true do 
    if gg.isVisible(true) then 
        gg.setVisible(false) 
        break 
    end 
end

-- B∆∞·ªõc 2: Nh·∫≠p gi√° tr·ªã l·ªçc
gg.alert("SETUP L·∫¶N ‚úåÔ∏è")
local b = gg.prompt({"NH·∫¨P GI√Å TR·ªä PHI·∫æU 2:"}, nil, {"number"})

if not b then 
    gg.toast("üö´ H·ª¶Y") 
    os.exit() 
end

-- L·ªçc d·ªØ li·ªáu t·ª´ k·∫øt qu·∫£ t√¨m ki·∫øm tr∆∞·ªõc
gg.refineNumber(b[1])
gg.toast("‚úÖ ƒê√É L·ªåC D·ªÆ LI·ªÜU")

-- L∆∞u l·∫°i danh s√°ch gi√° tr·ªã
local results = gg.getResults(100)
gg.addListItems(results)
gg.toast("üíæ ƒê√É L∆ØU D·ªÆ LI·ªÜU")
end

function EditValue(value)
    local results = gg.getListItems()
    if #results > 0 then
        for i = 1, #results do
            results[i].value = value
        end
        gg.setValues(results)
    end
end

function ChucNang2B1() 
    EditValue(25) 
end

function ChucNang2B2() 
    EditValue(30) 
end

function ChucNang2B3() 
    EditValue(35) 
end

function ChucNang2B4() 
    EditValue(40) 
end

function ChucNang2B5() 
    EditValue(45) 
end

function ChucNang2B6() 
    EditValue(50) 
end

function ChucNang2B7() 
    EditValue(55) 
end

function ChucNang2B8() 
    EditValue(60) 
end

function ChucNang2B9() 
    EditValue(65) 
end

function ChucNang2B10() 
    EditValue(70) 
end

function ChucNang2B11() 
    EditValue(75) 
end

function ChucNang2B12() 
    EditValue(80) 
end

function xoacn()
    gg.clearResults() -- X√≥a k·∫øt qu·∫£ t√¨m ki·∫øm
    gg.removeListItems(gg.getListItems()) -- X√≥a danh s√°ch ƒë√£ l∆∞u
    gg.toast("‚ùåƒê√É T·∫ÆT CH·ª®C NƒÇNG ")
end

-- THO√ÅT SCRIPT
function ExitScript()
    os.exit()
end

-- V√íNG L·∫∂P MENU CH√çNH
while true do
    if gg.isVisible(true) then
        gg.setVisible(false)
        if #menuStack == 0 then
            Main()
        else
            menuStack[#menuStack]()
        end
    end
end
